1. Install the necessary tools for kernel compilation:
	1.1 ncurses-dev
	1.2 gcc
	1.3 make
	1.4 initramfs-tools
	1.5 git

   It can be done with one command "apt-get install ncurses-dev gcc make initramfs-tools git" as root.

2. Download Clondike patch from github.com: 
   https://github.com/MarstCVUT/Clondike.git (manually link Downloads at right).

3. Download the appropriate kernel from www.kernel.org/pub/linux/kernel/v2.6/linux-2.6.33.1.tar.gz.
   You can use commend "wget www.kernel.org/pub/linux/kernel/v2.6/linux-2.6.33.1.tar.gz".

4. Unpack downloaded kernel i.e. by command 
   "tar -xvf linux-2.6.33.1.tar.gz"

5. Go to the unpacked directory i.e. 
   "cd linux-2.6.33.1".

6. Make a new kernel patch by command 
   "patch -p1 < path_to_the_downloaded_patch"  (clondike_kernel_2.6.33.1.patch)
	
7. If we've old and functional kernel config file, for example config-2.6.32-5-xen-amd64, we can use it. 
   Rename it to actual config file .config and compile it: 
   "cp config-2.6.32-5-xen-amd64 .config"
   "make oldconfig"

8. Enable in kernel settings several required properties. 
   Use spacebar to change configuration in menu, after all configurations save it to .config 
   by Save an Alternate Configuration File and Exit.

	"menuconfig"
	menu: Clondike > Enable TCMI Enable TCMI CCN Enable TCMI PEN 
	menu: File systems/Network File systems/NFS client support (ENABLE *) 
          > Enable ROOT_NFS (jeste doresit zavislosti viz hledani /root_nfs)
	
	menu: File systems/Network File Systems > Enable Plan 9 Resource Sharing Support
	menu: Networking support/Networking options > Disable Appletalk protocol support
	menu: Networking support > Enable Plan 9 Resource Sharing Support

9. Copy recursively a directory Clondike/src to the directory clondike i.e. 
   "cp -R ../Clondike-master/src/ clondike/".

10. The kernel compilation (in a directory linux-2.6.33.1)
	"make clean"
	"make -j4"
	"make modules"
	"make modules_install"
	"make install"

11. Go to directory /boot "cd /boot"

12. There create your own ramfs by command mkinitramfs 
    "mkinitramfs -o initrd.img-2.6.33.1-clondike-nfs 2.6.33.1-clondike-nfs"

13. GRUB: Add a line proxyfs.server=tcp:0.0.0.0:1112 to a grub config file 
    "echo "proxyfs.server=tcp:0.0.0.0:1112" >> /etc/default/grub"
    GRUB2: Add GRUB_CMDLINE_LINUX="proxyfs.server=tcp:0.0.0.0:1112"

14. Erase files with old indentity in the director 
    "rm * /root/clondike/userspace/simple-ruby-director/conf"

15. Reboot system a load right kernel linux-2.6.33.1 
    "reboot"

16. Install ruby on the new system 
    "apt-get install ruby"

17. Compile npfs server for function 9p sharing filesystem:
	NPFS is in folder /root/npfs_install
	17.1. Compile NPFS command "make"
	17.2. Execute file /root/npfs_install/fs copy to folder /root/npfs
	17.3. Execute script /root/npfs/npfs-start &
	17.4. Copy init script for NPFS from /etc/init.d/npfsd to same location in system 
                           for clondike /etc/init.d/rc.local to same location in system and overwrite it 

	Single commands:
	# mkdir /root/npfs
	# /root/clondike/root/npfs_install/fs/npfs /root/npfs/
	# /root/clondike/root/npfs/npfs-start /root/npfs/
	# chmod +x /root/npfs/npfs-start
	# /root/npfs/npfs-start &
	# cp /root/clondike/etc/init.d/npfsd /etc/init.d/
	# cp /root/clondike/etc/init.d/rc.local /etc/init.d/

18. Registered script for npfsd into INIT process by command:
	# update-rc.d npfsd defaults

19. Execute script 
    "/root/clondike/scripts/install.sh"

20. Restart director to generate new unique certificate
	"/root/clondike/scripts/restart-director.sh"
