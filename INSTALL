Clondike install manual for Linux distribution Debian:

1. Install the necessary tools and library for kernel compilation:
    1.1 gcc (for kernel 3.6.11 is maximal version 4.4!!!)
    1.2 make
    1.3 initramfs-tools
    1.4 git
    1.5 ncurses-dev

   It can be done with one command "apt-get install ncurses-dev gcc make initramfs-tools git" as root.

2. Download Clondike patch from github.com: 
   https://github.com/FIT-CVUT/clondike.git (manually link Downloads at right).

3. Download the appropriate kernel from www.kernel.org/pub/linux/kernel/v2.6/linux-3.6.11.tar.gz.
   You can use commend "wget www.kernel.org/pub/linux/kernel/v2.6/linux-3.6.11.tar.gz".

4. Unpack downloaded kernel i.e. by command 
   "tar -xzf linux-3.6.11.tar.gz"

5. Go to the unpacked directory i.e. 
   "cd linux-3.6.11".

6. Make a new kernel patch by command 
   "patch -p1 < path_to_the_downloaded_patch"  (clondike/patches/clondike_kernel_3.6.11.patch)
	
7. If we've old and functional kernel config file, for example config-2.6.32-5-xen-amd64, we can use it. If we haven't, skip this step.
   Rename it to actual config file .config and compile it: 
   "cp config-2.6.32-5-xen-amd64 .config"
   "make oldconfig"

8. Enable in kernel settings several required properties. 
   Use spacebar to change configuration in menu, after all configurations save it to .config 
   by Save an Alternate Configuration File and Exit.

	"make menuconfig"
	menu: Clondike > Enable TCMI Enable TCMI CCN Enable TCMI PEN 
	menu: File systems/Network File systems/NFS client support (ENABLE *) 
          > Enable ROOT_NFS (and also dependencies, search /root_nfs)
	menu: File systems/Network File Systems > Enable Plan 9 Resource Sharing Support
	menu: Networking support > Enable Plan 9 Resource Sharing Support

9. Copy recursively a directory Clondike/src to the directory clondike i.e. 
   "cp -R ../clondike/sources/kernel_X.X.X.X/src/ clondike/" # X.X.X.X is a version of your kernel in our case 3.6.11

10. The kernel compilation (in a directory linux-3.6.11)
	"make clean"
	"make -j4" # -j4 is a number of cores using to compilation
	"make modules"
	"make modules_install"
	"make install" # copy files to directory /boot

11. Go to directory /boot
	"cd /boot"

12. There create your own ramfs by command mkinitramfs 
    "mkinitramfs -o initrd.img-3.6.11 3.6.11"

13. GRUB: Add a line proxyfs.server=tcp:0.0.0.0:1112 to a grub config file to parameter GRUB_CMDLINE_LINUX using your favorite editor (i.e. nano) 
    "nano /etc/default/grub"
    # there replace GRUB_CMDLINE_LINUX="" for GRUB_CMDLINE_LINUX="proxyfs.server=tcp:0.0.0.0:1112"

14. Erase files with old indentity in the director 
    "rm -rf /root/clondike/userspace/simple-ruby-director/conf/*"
    
15. Add new kernel to grub by i.e. by command update-grub
	"update-grub"

16. Reboot system and load new kernel linux-3.6.11 
    "reboot"

17. Install ruby on the new system 
    "apt-get install ruby"

18. Compile npfs server for function 9p sharing filesystem:
	NPFS is in folder /root/npfs_install
	17.1. Compile NPFS command "make"
	17.2. Copy file /root/npfs_install/fs/npfs to folder /root/npfs
	17.3. Execute script /root/npfs/npfs-start &
	17.4. Copy init script for NPFS from /etc/init.d/npfsd to same location in system 
                           for clondike /etc/init.d/rc.local to same location in system and overwrite it 

	Single commands:
	# cp /root/clondike/root/npfs_install/fs/npfs /root/npfs/
	# chmod +x /root/npfs/npfs-start
	# /root/npfs/npfs-start &
	# cp /root/clondike/etc/init.d/npfsd /etc/init.d/

19	Replace modified init script for Clondike  
	# cp /root/clondike/etc/init.d/rc.local /etc/init.d/

20. Registered script for npfsd into INIT process by command:
	# update-rc.d npfsd defaults

20. Copy configuration file for migration
	"cp /root/clondike/root/.migration.conf /root/"

21. Execute script 
    "/root/clondike/scripts/install.sh"

22. Restart director to generate new unique certificate
	"/root/clondike/scripts/restart-director.sh"

23. Add record to fstab for mount CTLFS
	"none	/clondike	tcmi_ctlfs	defaults	0	0"


===================================== Appendix for developers ====================================
Necessary installed libraries:
libnl-3-200
libnl-3-dev
libnl-genl-3-200
libnl-genl-3-dev
libnl-utils

Compile director-api and ruby-director-api by Makefiles which are in same named folders
Execute in this folders:

# make

Install directorApi into Ruby libraries
In directory ruby-director-api execute

# make install

